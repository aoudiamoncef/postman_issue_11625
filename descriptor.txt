file {
  name: "google/protobuf/any.proto"
  package: "google.protobuf"
  message_type {
    name: "Any"
    field {
      name: "type_url"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "typeUrl"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "value"
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "AnyProto"
    java_multiple_files: true
    go_package: "google.golang.org/protobuf/types/known/anypb"
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  source_code_info {
    location {
      span: 30
      span: 0
      span: 157
      span: 1
    }
    location {
      path: 12
      span: 30
      span: 0
      span: 18
      leading_detached_comments: " Protocol Buffers - Google\'s data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    }
    location {
      path: 2
      span: 32
      span: 0
      span: 24
    }
    location {
      path: 8
      span: 34
      span: 0
      span: 59
    }
    location {
      path: 8
      path: 37
      span: 34
      span: 0
      span: 59
    }
    location {
      path: 8
      span: 35
      span: 0
      span: 67
    }
    location {
      path: 8
      path: 11
      span: 35
      span: 0
      span: 67
    }
    location {
      path: 8
      span: 36
      span: 0
      span: 44
    }
    location {
      path: 8
      path: 1
      span: 36
      span: 0
      span: 44
    }
    location {
      path: 8
      span: 37
      span: 0
      span: 41
    }
    location {
      path: 8
      path: 8
      span: 37
      span: 0
      span: 41
    }
    location {
      path: 8
      span: 38
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 38
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 39
      span: 0
      span: 33
    }
    location {
      path: 8
      path: 36
      span: 39
      span: 0
      span: 33
    }
    location {
      path: 4
      path: 0
      span: 124
      span: 0
      span: 157
      span: 1
      leading_comments: " `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.\n\n Protobuf library provides support to pack/unpack Any values in the form\n of utility functions or additional generated methods of the Any type.\n\n Example 1: Pack and unpack a message in C++.\n\n     Foo foo = ...;\n     Any any;\n     any.PackFrom(foo);\n     ...\n     if (any.UnpackTo(&foo)) {\n       ...\n     }\n\n Example 2: Pack and unpack a message in Java.\n\n     Foo foo = ...;\n     Any any = Any.pack(foo);\n     ...\n     if (any.is(Foo.class)) {\n       foo = any.unpack(Foo.class);\n     }\n\n Example 3: Pack and unpack a message in Python.\n\n     foo = Foo(...)\n     any = Any()\n     any.Pack(foo)\n     ...\n     if any.Is(Foo.DESCRIPTOR):\n       any.Unpack(foo)\n       ...\n\n Example 4: Pack and unpack a message in Go\n\n      foo := &pb.Foo{...}\n      any, err := anypb.New(foo)\n      if err != nil {\n        ...\n      }\n      ...\n      foo := &pb.Foo{}\n      if err := any.UnmarshalTo(foo); err != nil {\n        ...\n      }\n\n The pack methods provided by protobuf library will by default use\n \'type.googleapis.com/full.type.name\' as the type URL and the unpack\n methods only use the fully qualified type name after the last \'/\'\n in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n name \"y.z\".\n\n\n JSON\n\n The JSON representation of an `Any` value uses the regular\n representation of the deserialized, embedded message, with an\n additional field `@type` which contains the type URL. Example:\n\n     package google.profile;\n     message Person {\n       string first_name = 1;\n       string last_name = 2;\n     }\n\n     {\n       \"@type\": \"type.googleapis.com/google.profile.Person\",\n       \"firstName\": <string>,\n       \"lastName\": <string>\n     }\n\n If the embedded message type is well-known and has a custom JSON\n representation, that representation will be embedded adding a field\n `value` which holds the custom JSON in addition to the `@type`\n field. Example (for message [google.protobuf.Duration][]):\n\n     {\n       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n       \"value\": \"1.212s\"\n     }\n\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 124
      span: 8
      span: 11
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 153
      span: 2
      span: 22
      leading_comments: " A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL\'s path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics.\n\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 153
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 153
      span: 9
      span: 17
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 153
      span: 20
      span: 21
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 156
      span: 2
      span: 18
      leading_comments: " Must be a valid serialized protocol buffer of the above specified type.\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 156
      span: 2
      span: 7
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 156
      span: 8
      span: 13
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 156
      span: 16
      span: 17
    }
  }
  syntax: "proto3"
}
file {
  name: "google/rpc/status.proto"
  package: "google.rpc"
  dependency: "google/protobuf/any.proto"
  message_type {
    name: "Status"
    field {
      name: "code"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "code"
    }
    field {
      name: "message"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "message"
    }
    field {
      name: "details"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Any"
      json_name: "details"
    }
  }
  options {
    java_package: "com.google.rpc"
    java_outer_classname: "StatusProto"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/googleapis/rpc/status;status"
    cc_enable_arenas: true
    objc_class_prefix: "RPC"
  }
  source_code_info {
    location {
      span: 14
      span: 0
      span: 48
      span: 1
    }
    location {
      path: 12
      span: 14
      span: 0
      span: 18
      leading_detached_comments: " Copyright 2022 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: 2
      span: 16
      span: 0
      span: 19
    }
    location {
      path: 3
      path: 0
      span: 18
      span: 0
      span: 35
    }
    location {
      path: 8
      span: 20
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 20
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 21
      span: 0
      span: 78
    }
    location {
      path: 8
      path: 11
      span: 21
      span: 0
      span: 78
    }
    location {
      path: 8
      span: 22
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 22
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 23
      span: 0
      span: 44
    }
    location {
      path: 8
      path: 8
      span: 23
      span: 0
      span: 44
    }
    location {
      path: 8
      span: 24
      span: 0
      span: 39
    }
    location {
      path: 8
      path: 1
      span: 24
      span: 0
      span: 39
    }
    location {
      path: 8
      span: 25
      span: 0
      span: 33
    }
    location {
      path: 8
      path: 36
      span: 25
      span: 0
      span: 33
    }
    location {
      path: 4
      path: 0
      span: 34
      span: 0
      span: 48
      span: 1
      leading_comments: " The `Status` type defines a logical error model that is suitable for\n different programming environments, including REST APIs and RPC APIs. It is\n used by [gRPC](https://github.com/grpc). Each `Status` message contains\n three pieces of data: error code, error message, and error details.\n\n You can find out more about this error model and how to work with it in the\n [API Design Guide](https://cloud.google.com/apis/design/errors).\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 34
      span: 8
      span: 14
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 37
      span: 2
      span: 17
      leading_comments: " The status code, which should be an enum value of\n [google.rpc.Code][google.rpc.Code].\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 37
      span: 2
      span: 7
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 37
      span: 8
      span: 12
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 37
      span: 15
      span: 16
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 43
      span: 2
      span: 21
      leading_comments: " A developer-facing error message, which should be in English. Any\n user-facing error message should be localized and sent in the\n [google.rpc.Status.details][google.rpc.Status.details] field, or localized\n by the client.\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 43
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 43
      span: 9
      span: 16
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 43
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 2
      span: 47
      span: 2
      span: 43
      leading_comments: " A list of messages that carry the error details.  There is a common set of\n message types for APIs to use.\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 2
      path: 4
      span: 47
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 2
      path: 6
      span: 47
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 47
      span: 31
      span: 38
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 2
      path: 3
      span: 47
      span: 41
      span: 42
    }
  }
  syntax: "proto3"
}
file {
  name: "block.proto"
  package: "postman.api.v1"
  dependency: "google/rpc/status.proto"
  message_type {
    name: "SendBlocksRequest"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "Block"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "Block"
    }
  }
  message_type {
    name: "SendBlocksResponse"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "result"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".postman.api.v1.BlockResult"
      oneof_index: 0
      json_name: "result"
    }
    field {
      name: "error"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.rpc.Status"
      oneof_index: 0
      json_name: "error"
    }
    oneof_decl {
      name: "message"
    }
  }
  message_type {
    name: "BlockResult"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
  }
  options {
    java_package: "com.postman.api.v1"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/postman/api/v1/block;block"
    cc_enable_arenas: true
    objc_class_prefix: "BLOCK"
    csharp_namespace: "Postman.Api.V1"
    php_namespace: "Postman\\Api\\V1"
  }
  source_code_info {
    location {
      span: 0
      span: 0
      span: 37
      span: 1
    }
    location {
      path: 12
      span: 0
      span: 0
      span: 18
    }
    location {
      path: 2
      span: 2
      span: 0
      span: 23
    }
    location {
      path: 3
      path: 0
      span: 4
      span: 0
      span: 33
    }
    location {
      path: 8
      span: 6
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 6
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 7
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 37
      span: 7
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 8
      span: 0
      span: 76
    }
    location {
      path: 8
      path: 11
      span: 8
      span: 0
      span: 76
    }
    location {
      path: 8
      span: 9
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 9
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 1
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 11
      span: 0
      span: 35
    }
    location {
      path: 8
      path: 36
      span: 11
      span: 0
      span: 35
    }
    location {
      path: 8
      span: 12
      span: 0
      span: 42
    }
    location {
      path: 8
      path: 41
      span: 12
      span: 0
      span: 42
    }
    location {
      path: 4
      path: 0
      span: 15
      span: 0
      span: 20
      span: 1
      leading_comments: " SendBlocksRequest holds parameters to SendBlocks\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 15
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 17
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 17
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 17
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 17
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 19
      span: 2
      span: 19
      leading_comments: " object field\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 19
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 19
      span: 9
      span: 14
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 19
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 1
      span: 23
      span: 0
      span: 31
      span: 1
      leading_comments: " SendBlocksResponse holds response from SendBlocks\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 23
      span: 8
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 25
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 25
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 25
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 25
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      span: 27
      span: 2
      span: 30
      span: 3
      leading_comments: " object field\n"
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      path: 1
      span: 27
      span: 8
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 28
      span: 4
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 6
      span: 28
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 28
      span: 16
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 28
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 29
      span: 4
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 6
      span: 29
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 29
      span: 22
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 29
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 2
      span: 34
      span: 0
      span: 37
      span: 1
      leading_comments: " Holds Block response\n"
    }
    location {
      path: 4
      path: 2
      path: 1
      span: 34
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      span: 36
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 5
      span: 36
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 1
      span: 36
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 3
      span: 36
      span: 14
      span: 15
    }
  }
  syntax: "proto3"
}
file {
  name: "operation.proto"
  package: "postman.api.v1"
  dependency: "google/rpc/status.proto"
  message_type {
    name: "SendOperationsRequest"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "operation"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "operation"
    }
  }
  message_type {
    name: "SendOperationsResponse"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "result"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".postman.api.v1.OperationResult"
      oneof_index: 0
      json_name: "result"
    }
    field {
      name: "error"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.rpc.Status"
      oneof_index: 0
      json_name: "error"
    }
    oneof_decl {
      name: "message"
    }
  }
  message_type {
    name: "OperationResult"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
  }
  options {
    java_package: "com.postman.api.v1"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/postman/api/v1/operation;operation"
    cc_enable_arenas: true
    objc_class_prefix: "OPERATION"
    csharp_namespace: "Postman.Api.V1"
    php_namespace: "Postman\\Api\\V1"
  }
  source_code_info {
    location {
      span: 0
      span: 0
      span: 37
      span: 1
    }
    location {
      path: 12
      span: 0
      span: 0
      span: 18
    }
    location {
      path: 2
      span: 2
      span: 0
      span: 23
    }
    location {
      path: 3
      path: 0
      span: 4
      span: 0
      span: 33
    }
    location {
      path: 8
      span: 6
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 6
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 7
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 37
      span: 7
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 8
      span: 0
      span: 84
    }
    location {
      path: 8
      path: 11
      span: 8
      span: 0
      span: 84
    }
    location {
      path: 8
      span: 9
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 9
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 1
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 11
      span: 0
      span: 39
    }
    location {
      path: 8
      path: 36
      span: 11
      span: 0
      span: 39
    }
    location {
      path: 8
      span: 12
      span: 0
      span: 42
    }
    location {
      path: 8
      path: 41
      span: 12
      span: 0
      span: 42
    }
    location {
      path: 4
      path: 0
      span: 15
      span: 0
      span: 20
      span: 1
      leading_comments: " SendOperationsRequest holds parameters to SendOperations\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 15
      span: 8
      span: 29
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 17
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 17
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 17
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 17
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 19
      span: 2
      span: 23
      leading_comments: " object field\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 19
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 19
      span: 9
      span: 18
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 19
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 1
      span: 23
      span: 0
      span: 31
      span: 1
      leading_comments: " SendOperationsResponse holds response from SendOperations\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 23
      span: 8
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 25
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 25
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 25
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 25
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      span: 27
      span: 2
      span: 30
      span: 3
      leading_comments: " object field\n"
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      path: 1
      span: 27
      span: 8
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 28
      span: 4
      span: 31
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 6
      span: 28
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 28
      span: 20
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 28
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 29
      span: 4
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 6
      span: 29
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 29
      span: 22
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 29
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 2
      span: 34
      span: 0
      span: 37
      span: 1
      leading_comments: " Holds Operation response\n"
    }
    location {
      path: 4
      path: 2
      path: 1
      span: 34
      span: 8
      span: 23
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      span: 36
      span: 2
      span: 16
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 5
      span: 36
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 1
      span: 36
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 3
      span: 36
      span: 14
      span: 15
    }
  }
  syntax: "proto3"
}
file {
  name: "google/api/http.proto"
  package: "google.api"
  message_type {
    name: "Http"
    field {
      name: "rules"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.api.HttpRule"
      json_name: "rules"
    }
    field {
      name: "fully_decode_reserved_expansion"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "fullyDecodeReservedExpansion"
    }
  }
  message_type {
    name: "HttpRule"
    field {
      name: "selector"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "selector"
    }
    field {
      name: "get"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "get"
    }
    field {
      name: "put"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "put"
    }
    field {
      name: "post"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "post"
    }
    field {
      name: "delete"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "delete"
    }
    field {
      name: "patch"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "patch"
    }
    field {
      name: "custom"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.api.CustomHttpPattern"
      oneof_index: 0
      json_name: "custom"
    }
    field {
      name: "body"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "body"
    }
    field {
      name: "response_body"
      number: 12
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "responseBody"
    }
    field {
      name: "additional_bindings"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.api.HttpRule"
      json_name: "additionalBindings"
    }
    oneof_decl {
      name: "pattern"
    }
  }
  message_type {
    name: "CustomHttpPattern"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "kind"
    }
    field {
      name: "path"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "path"
    }
  }
  options {
    java_package: "com.google.api"
    java_outer_classname: "HttpProto"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations"
    cc_enable_arenas: true
    objc_class_prefix: "GAPI"
  }
  source_code_info {
    location {
      span: 14
      span: 0
      span: 374
      span: 1
    }
    location {
      path: 12
      span: 14
      span: 0
      span: 18
      leading_detached_comments: " Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: 2
      span: 16
      span: 0
      span: 19
    }
    location {
      path: 8
      span: 18
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 18
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 19
      span: 0
      span: 88
    }
    location {
      path: 8
      path: 11
      span: 19
      span: 0
      span: 88
    }
    location {
      path: 8
      span: 20
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 20
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 21
      span: 0
      span: 42
    }
    location {
      path: 8
      path: 8
      span: 21
      span: 0
      span: 42
    }
    location {
      path: 8
      span: 22
      span: 0
      span: 39
    }
    location {
      path: 8
      path: 1
      span: 22
      span: 0
      span: 39
    }
    location {
      path: 8
      span: 23
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 36
      span: 23
      span: 0
      span: 34
    }
    location {
      path: 4
      path: 0
      span: 28
      span: 0
      span: 41
      span: 1
      leading_comments: " Defines the HTTP configuration for an API service. It contains a list of\n [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\n to one or more HTTP REST API methods.\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 28
      span: 8
      span: 12
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 32
      span: 2
      span: 30
      leading_comments: " A list of HTTP configuration rules that apply to individual API methods.\n\n **NOTE:** All service configuration rules follow \"last one wins\" order.\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 4
      span: 32
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 6
      span: 32
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 32
      span: 20
      span: 25
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 32
      span: 28
      span: 29
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 40
      span: 2
      span: 43
      leading_comments: " When set to true, URL path parameters will be fully URI-decoded except in\n cases of single segment matches in reserved expansion, where \"%2F\" will be\n left encoded.\n\n The default behavior is to not decode RFC 6570 reserved characters in multi\n segment matches.\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 40
      span: 2
      span: 6
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 40
      span: 7
      span: 38
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 40
      span: 41
      span: 42
    }
    location {
      path: 4
      path: 1
      span: 312
      span: 0
      span: 365
      span: 1
      leading_comments: " # gRPC Transcoding\n\n gRPC Transcoding is a feature for mapping between a gRPC method and one or\n more HTTP REST endpoints. It allows developers to build a single API service\n that supports both gRPC APIs and REST APIs. Many systems, including [Google\n APIs](https://github.com/googleapis/googleapis),\n [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC\n Gateway](https://github.com/grpc-ecosystem/grpc-gateway),\n and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature\n and use it for large scale production services.\n\n `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies\n how different portions of the gRPC request message are mapped to the URL\n path, URL query parameters, and HTTP request body. It also controls how the\n gRPC response message is mapped to the HTTP response body. `HttpRule` is\n typically specified as an `google.api.http` annotation on the gRPC method.\n\n Each mapping specifies a URL path template and an HTTP method. The path\n template may refer to one or more fields in the gRPC request message, as long\n as each field is a non-repeated field with a primitive (non-message) type.\n The path template controls how fields of the request message are mapped to\n the URL path.\n\n Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get: \"/v1/{name=messages/*}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       string name = 1; // Mapped to URL path.\n     }\n     message Message {\n       string text = 1; // The resource content.\n     }\n\n This enables an HTTP REST to gRPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456`  | `GetMessage(name: \"messages/123456\")`\n\n Any fields in the request message which are not bound by the path template\n automatically become HTTP query parameters if there is no HTTP request body.\n For example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get:\"/v1/messages/{message_id}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // Mapped to URL path.\n       int64 revision = 2;    // Mapped to URL query parameter `revision`.\n       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.\n     }\n\n This enables a HTTP JSON to RPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456?revision=2&sub.subfield=foo` |\n `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield:\n \"foo\"))`\n\n Note that fields which are mapped to URL query parameters must have a\n primitive type or a repeated primitive type or a non-repeated message type.\n In the case of a repeated type, the parameter can be repeated in the URL\n as `...?param=A&param=B`. In the case of a message type, each field of the\n message is mapped to a separate parameter, such as\n `...?foo.a=A&foo.b=B&foo.c=C`.\n\n For HTTP methods that allow a request body, the `body` field\n specifies the mapping. Consider a REST update method on the\n message resource collection:\n\n     service Messaging {\n       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"message\"\n         };\n       }\n     }\n     message UpdateMessageRequest {\n       string message_id = 1; // mapped to the URL\n       Message message = 2;   // mapped to the body\n     }\n\n The following HTTP JSON to RPC mapping is enabled, where the\n representation of the JSON in the request body is determined by\n protos JSON encoding:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" message { text: \"Hi!\" })`\n\n The special name `*` can be used in the body mapping to define that\n every field not bound by the path template should be mapped to the\n request body.  This enables the following alternative definition of\n the update method:\n\n     service Messaging {\n       rpc UpdateMessage(Message) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"*\"\n         };\n       }\n     }\n     message Message {\n       string message_id = 1;\n       string text = 2;\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" text: \"Hi!\")`\n\n Note that when using `*` in the body mapping, it is not possible to\n have HTTP parameters, as all fields not bound by the path end in\n the body. This makes this option more rarely used in practice when\n defining REST APIs. The common usage of `*` is in custom methods\n which don\'t use the URL at all for transferring data.\n\n It is possible to define multiple HTTP methods for one RPC by using\n the `additional_bindings` option. Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           get: \"/v1/messages/{message_id}\"\n           additional_bindings {\n             get: \"/v1/users/{user_id}/messages/{message_id}\"\n           }\n         };\n       }\n     }\n     message GetMessageRequest {\n       string message_id = 1;\n       string user_id = 2;\n     }\n\n This enables the following two alternative HTTP JSON to RPC mappings:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id:\n \"123456\")`\n\n ## Rules for HTTP mapping\n\n 1. Leaf request fields (recursive expansion nested messages in the request\n    message) are classified into three categories:\n    - Fields referred by the path template. They are passed via the URL path.\n    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They are passed via the HTTP\n      request body.\n    - All other fields are passed via the URL query parameters, and the\n      parameter name is the field path in the request message. A repeated\n      field can be represented as multiple query parameters under the same\n      name.\n  2. If [HttpRule.body][google.api.HttpRule.body] is \"*\", there is no URL query parameter, all fields\n     are passed via URL path and HTTP request body.\n  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP request body, all\n     fields are passed via URL path and URL query parameters.\n\n ### Path template syntax\n\n     Template = \"/\" Segments [ Verb ] ;\n     Segments = Segment { \"/\" Segment } ;\n     Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n     Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n     FieldPath = IDENT { \".\" IDENT } ;\n     Verb     = \":\" LITERAL ;\n\n The syntax `*` matches a single URL path segment. The syntax `**` matches\n zero or more URL path segments, which must be the last part of the URL path\n except the `Verb`.\n\n The syntax `Variable` matches part of the URL path as specified by its\n template. A variable template must not contain other variables. If a variable\n matches a single path segment, its template may be omitted, e.g. `{var}`\n is equivalent to `{var=*}`.\n\n The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`\n contains any reserved character, such characters should be percent-encoded\n before the matching.\n\n If a variable contains exactly one path segment, such as `\"{var}\"` or\n `\"{var=*}\"`, when such a variable is expanded into a URL path on the client\n side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The\n server side does the reverse decoding. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{var}`.\n\n If a variable contains multiple path segments, such as `\"{var=foo/*}\"`\n or `\"{var=**}\"`, when such a variable is expanded into a URL path on the\n client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.\n The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left\n unchanged. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{+var}`.\n\n ## Using gRPC API Service Configuration\n\n gRPC API Service Configuration (service config) is a configuration language\n for configuring a gRPC service to become a user-facing product. The\n service config is simply the YAML representation of the `google.api.Service`\n proto message.\n\n As an alternative to annotating your proto file, you can configure gRPC\n transcoding in your service config YAML files. You do this by specifying a\n `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same\n effect as the proto annotation. This can be particularly useful if you\n have a proto that is reused in multiple services. Note that any transcoding\n specified in the service config will override any matching transcoding\n configuration in the proto.\n\n Example:\n\n     http:\n       rules:\n         # Selects a gRPC method and applies HttpRule to it.\n         - selector: example.v1.Messaging.GetMessage\n           get: /v1/messages/{message_id}/{sub.subfield}\n\n ## Special notes\n\n When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the\n proto to JSON conversion must follow the [proto3\n specification](https://developers.google.com/protocol-buffers/docs/proto3#json).\n\n While the single segment variable follows the semantics of\n [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\n Expansion, the multi segment variable **does not** follow RFC 6570 Section\n 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion\n does not expand special characters like `?` and `#`, which would lead\n to invalid URLs. As the result, gRPC Transcoding uses a custom encoding\n for multi segment variables.\n\n The path variables **must not** refer to any repeated or mapped field,\n because client libraries are not capable of handling such variable expansion.\n\n The path variables **must not** capture the leading \"/\" character. The reason\n is that the most common use case \"{var}\" does not capture the leading \"/\"\n character. For consistency, all path variables must share the same behavior.\n\n Repeated message fields must not be mapped to URL query parameters, because\n no client library can support such complicated mapping.\n\n If an API needs to use a JSON array for request or response body, it can map\n the request or response body to a repeated field. However, some gRPC\n Transcoding implementations may not support this feature.\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 312
      span: 8
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 316
      span: 2
      span: 22
      leading_comments: " Selects a method to which this rule applies.\n\n Refer to [selector][google.api.DocumentationRule.selector] for syntax details.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 316
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 316
      span: 9
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 316
      span: 20
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      span: 321
      span: 2
      span: 343
      span: 3
      leading_comments: " Determines the URL pattern is matched by this rules. This pattern can be\n used with any of the {get|put|post|delete|patch} methods. A custom method\n can be defined using the \'custom\' field.\n"
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      path: 1
      span: 321
      span: 8
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 324
      span: 4
      span: 19
      leading_comments: " Maps to HTTP GET. Used for listing and getting information about\n resources.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 5
      span: 324
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 324
      span: 11
      span: 14
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 324
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 327
      span: 4
      span: 19
      leading_comments: " Maps to HTTP PUT. Used for replacing a resource.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 5
      span: 327
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 327
      span: 11
      span: 14
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 327
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      span: 330
      span: 4
      span: 20
      leading_comments: " Maps to HTTP POST. Used for creating a resource or performing an action.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 5
      span: 330
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 1
      span: 330
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 3
      span: 330
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      span: 333
      span: 4
      span: 22
      leading_comments: " Maps to HTTP DELETE. Used for deleting a resource.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 5
      span: 333
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 1
      span: 333
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 3
      span: 333
      span: 20
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      span: 336
      span: 4
      span: 21
      leading_comments: " Maps to HTTP PATCH. Used for updating a resource.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 5
      span: 336
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 1
      span: 336
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 3
      span: 336
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      span: 342
      span: 4
      span: 33
      leading_comments: " The custom pattern is used for specifying an HTTP method that is not\n included in the `pattern` field, such as HEAD, or \"*\" to leave the\n HTTP method unspecified for this rule. The wild-card rule is useful\n for services that provide content to Web (HTML) clients.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 6
      span: 342
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 1
      span: 342
      span: 22
      span: 28
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 3
      span: 342
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      span: 351
      span: 2
      span: 18
      leading_comments: " The name of the request field whose value is mapped to the HTTP request\n body, or `*` for mapping all request fields not captured by the path\n pattern to the HTTP body, or omitted for not having any HTTP request body.\n\n NOTE: the referred field must be present at the top-level of the request\n message type.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 5
      span: 351
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 1
      span: 351
      span: 9
      span: 13
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 3
      span: 351
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      span: 359
      span: 2
      span: 28
      leading_comments: " Optional. The name of the response field whose value is mapped to the HTTP\n response body. When omitted, the entire response message will be used\n as the HTTP response body.\n\n NOTE: The referred field must be present at the top-level of the response\n message type.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 5
      span: 359
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 1
      span: 359
      span: 9
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 3
      span: 359
      span: 25
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      span: 364
      span: 2
      span: 45
      leading_comments: " Additional HTTP bindings for the selector. Nested bindings must\n not contain an `additional_bindings` field themselves (that is,\n the nesting may only be one level deep).\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 4
      span: 364
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 6
      span: 364
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 1
      span: 364
      span: 20
      span: 39
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 3
      span: 364
      span: 42
      span: 44
    }
    location {
      path: 4
      path: 2
      span: 368
      span: 0
      span: 374
      span: 1
      leading_comments: " A custom pattern is used for defining custom HTTP verb.\n"
    }
    location {
      path: 4
      path: 2
      path: 1
      span: 368
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      span: 370
      span: 2
      span: 18
      leading_comments: " The name of this custom HTTP verb.\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 5
      span: 370
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 1
      span: 370
      span: 9
      span: 13
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 3
      span: 370
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      span: 373
      span: 2
      span: 18
      leading_comments: " The path matched by this custom verb.\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 5
      span: 373
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 1
      span: 373
      span: 9
      span: 13
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 3
      span: 373
      span: 16
      span: 17
    }
  }
  syntax: "proto3"
}
file {
  name: "google/protobuf/descriptor.proto"
  package: "google.protobuf"
  message_type {
    name: "FileDescriptorSet"
    field {
      name: "file"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileDescriptorProto"
      json_name: "file"
    }
  }
  message_type {
    name: "FileDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "package"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "package"
    }
    field {
      name: "dependency"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "dependency"
    }
    field {
      name: "public_dependency"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "publicDependency"
    }
    field {
      name: "weak_dependency"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "weakDependency"
    }
    field {
      name: "message_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "messageType"
    }
    field {
      name: "enum_type"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "service"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceDescriptorProto"
      json_name: "service"
    }
    field {
      name: "extension"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileOptions"
      json_name: "options"
    }
    field {
      name: "source_code_info"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo"
      json_name: "sourceCodeInfo"
    }
    field {
      name: "syntax"
      number: 12
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "syntax"
    }
  }
  message_type {
    name: "DescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "field"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "field"
    }
    field {
      name: "extension"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "nested_type"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "nestedType"
    }
    field {
      name: "enum_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "extension_range"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ExtensionRange"
      json_name: "extensionRange"
    }
    field {
      name: "oneof_decl"
      number: 8
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofDescriptorProto"
      json_name: "oneofDecl"
    }
    field {
      name: "options"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MessageOptions"
      json_name: "options"
    }
    field {
      name: "reserved_range"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ReservedRange"
      json_name: "reservedRange"
    }
    field {
      name: "reserved_name"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "reservedName"
    }
    nested_type {
      name: "ExtensionRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
      field {
        name: "options"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".google.protobuf.ExtensionRangeOptions"
        json_name: "options"
      }
    }
    nested_type {
      name: "ReservedRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  message_type {
    name: "ExtensionRangeOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "FieldDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Label"
      json_name: "label"
    }
    field {
      name: "type"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Type"
      json_name: "type"
    }
    field {
      name: "type_name"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "typeName"
    }
    field {
      name: "extendee"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "extendee"
    }
    field {
      name: "default_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "defaultValue"
    }
    field {
      name: "oneof_index"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "oneofIndex"
    }
    field {
      name: "json_name"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "jsonName"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldOptions"
      json_name: "options"
    }
    field {
      name: "proto3_optional"
      number: 17
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "proto3Optional"
    }
    enum_type {
      name: "Type"
      value {
        name: "TYPE_DOUBLE"
        number: 1
      }
      value {
        name: "TYPE_FLOAT"
        number: 2
      }
      value {
        name: "TYPE_INT64"
        number: 3
      }
      value {
        name: "TYPE_UINT64"
        number: 4
      }
      value {
        name: "TYPE_INT32"
        number: 5
      }
      value {
        name: "TYPE_FIXED64"
        number: 6
      }
      value {
        name: "TYPE_FIXED32"
        number: 7
      }
      value {
        name: "TYPE_BOOL"
        number: 8
      }
      value {
        name: "TYPE_STRING"
        number: 9
      }
      value {
        name: "TYPE_GROUP"
        number: 10
      }
      value {
        name: "TYPE_MESSAGE"
        number: 11
      }
      value {
        name: "TYPE_BYTES"
        number: 12
      }
      value {
        name: "TYPE_UINT32"
        number: 13
      }
      value {
        name: "TYPE_ENUM"
        number: 14
      }
      value {
        name: "TYPE_SFIXED32"
        number: 15
      }
      value {
        name: "TYPE_SFIXED64"
        number: 16
      }
      value {
        name: "TYPE_SINT32"
        number: 17
      }
      value {
        name: "TYPE_SINT64"
        number: 18
      }
    }
    enum_type {
      name: "Label"
      value {
        name: "LABEL_OPTIONAL"
        number: 1
      }
      value {
        name: "LABEL_REQUIRED"
        number: 2
      }
      value {
        name: "LABEL_REPEATED"
        number: 3
      }
    }
  }
  message_type {
    name: "OneofDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "options"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "EnumDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueDescriptorProto"
      json_name: "value"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumOptions"
      json_name: "options"
    }
    field {
      name: "reserved_range"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto.EnumReservedRange"
      json_name: "reservedRange"
    }
    field {
      name: "reserved_name"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "reservedName"
    }
    nested_type {
      name: "EnumReservedRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  message_type {
    name: "EnumValueDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "ServiceDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "method"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodDescriptorProto"
      json_name: "method"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "MethodDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "input_type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "inputType"
    }
    field {
      name: "output_type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "outputType"
    }
    field {
      name: "options"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodOptions"
      json_name: "options"
    }
    field {
      name: "client_streaming"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "clientStreaming"
    }
    field {
      name: "server_streaming"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "serverStreaming"
    }
  }
  message_type {
    name: "FileOptions"
    field {
      name: "java_package"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaPackage"
    }
    field {
      name: "java_outer_classname"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaOuterClassname"
    }
    field {
      name: "java_multiple_files"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaMultipleFiles"
    }
    field {
      name: "java_generate_equals_and_hash"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        deprecated: true
      }
      json_name: "javaGenerateEqualsAndHash"
    }
    field {
      name: "java_string_check_utf8"
      number: 27
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaStringCheckUtf8"
    }
    field {
      name: "optimize_for"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FileOptions.OptimizeMode"
      default_value: "SPEED"
      json_name: "optimizeFor"
    }
    field {
      name: "go_package"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "goPackage"
    }
    field {
      name: "cc_generic_services"
      number: 16
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "ccGenericServices"
    }
    field {
      name: "java_generic_services"
      number: 17
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaGenericServices"
    }
    field {
      name: "py_generic_services"
      number: 18
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "pyGenericServices"
    }
    field {
      name: "php_generic_services"
      number: 42
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "phpGenericServices"
    }
    field {
      name: "deprecated"
      number: 23
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "cc_enable_arenas"
      number: 31
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "true"
      json_name: "ccEnableArenas"
    }
    field {
      name: "objc_class_prefix"
      number: 36
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "objcClassPrefix"
    }
    field {
      name: "csharp_namespace"
      number: 37
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "csharpNamespace"
    }
    field {
      name: "swift_prefix"
      number: 39
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "swiftPrefix"
    }
    field {
      name: "php_class_prefix"
      number: 40
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpClassPrefix"
    }
    field {
      name: "php_namespace"
      number: 41
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpNamespace"
    }
    field {
      name: "php_metadata_namespace"
      number: 44
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpMetadataNamespace"
    }
    field {
      name: "ruby_package"
      number: 45
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "rubyPackage"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "OptimizeMode"
      value {
        name: "SPEED"
        number: 1
      }
      value {
        name: "CODE_SIZE"
        number: 2
      }
      value {
        name: "LITE_RUNTIME"
        number: 3
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 38
      end: 39
    }
  }
  message_type {
    name: "MessageOptions"
    field {
      name: "message_set_wire_format"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "messageSetWireFormat"
    }
    field {
      name: "no_standard_descriptor_accessor"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "noStandardDescriptorAccessor"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "map_entry"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "mapEntry"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 4
      end: 5
    }
    reserved_range {
      start: 5
      end: 6
    }
    reserved_range {
      start: 6
      end: 7
    }
    reserved_range {
      start: 8
      end: 9
    }
    reserved_range {
      start: 9
      end: 10
    }
  }
  message_type {
    name: "FieldOptions"
    field {
      name: "ctype"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.CType"
      default_value: "STRING"
      json_name: "ctype"
    }
    field {
      name: "packed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "packed"
    }
    field {
      name: "jstype"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.JSType"
      default_value: "JS_NORMAL"
      json_name: "jstype"
    }
    field {
      name: "lazy"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "lazy"
    }
    field {
      name: "unverified_lazy"
      number: 15
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "unverifiedLazy"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "weak"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "weak"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "CType"
      value {
        name: "STRING"
        number: 0
      }
      value {
        name: "CORD"
        number: 1
      }
      value {
        name: "STRING_PIECE"
        number: 2
      }
    }
    enum_type {
      name: "JSType"
      value {
        name: "JS_NORMAL"
        number: 0
      }
      value {
        name: "JS_STRING"
        number: 1
      }
      value {
        name: "JS_NUMBER"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 4
      end: 5
    }
  }
  message_type {
    name: "OneofOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "EnumOptions"
    field {
      name: "allow_alias"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "allowAlias"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 5
      end: 6
    }
  }
  message_type {
    name: "EnumValueOptions"
    field {
      name: "deprecated"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "ServiceOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "MethodOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "idempotency_level"
      number: 34
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.MethodOptions.IdempotencyLevel"
      default_value: "IDEMPOTENCY_UNKNOWN"
      json_name: "idempotencyLevel"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "IdempotencyLevel"
      value {
        name: "IDEMPOTENCY_UNKNOWN"
        number: 0
      }
      value {
        name: "NO_SIDE_EFFECTS"
        number: 1
      }
      value {
        name: "IDEMPOTENT"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "UninterpretedOption"
    field {
      name: "name"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption.NamePart"
      json_name: "name"
    }
    field {
      name: "identifier_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "identifierValue"
    }
    field {
      name: "positive_int_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "positiveIntValue"
    }
    field {
      name: "negative_int_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "negativeIntValue"
    }
    field {
      name: "double_value"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "doubleValue"
    }
    field {
      name: "string_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "stringValue"
    }
    field {
      name: "aggregate_value"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "aggregateValue"
    }
    nested_type {
      name: "NamePart"
      field {
        name: "name_part"
        number: 1
        label: LABEL_REQUIRED
        type: TYPE_STRING
        json_name: "namePart"
      }
      field {
        name: "is_extension"
        number: 2
        label: LABEL_REQUIRED
        type: TYPE_BOOL
        json_name: "isExtension"
      }
    }
  }
  message_type {
    name: "SourceCodeInfo"
    field {
      name: "location"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo.Location"
      json_name: "location"
    }
    nested_type {
      name: "Location"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "span"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "span"
      }
      field {
        name: "leading_comments"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "leadingComments"
      }
      field {
        name: "trailing_comments"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "trailingComments"
      }
      field {
        name: "leading_detached_comments"
        number: 6
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "leadingDetachedComments"
      }
    }
  }
  message_type {
    name: "GeneratedCodeInfo"
    field {
      name: "annotation"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.GeneratedCodeInfo.Annotation"
      json_name: "annotation"
    }
    nested_type {
      name: "Annotation"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "source_file"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "sourceFile"
      }
      field {
        name: "begin"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "begin"
      }
      field {
        name: "end"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "DescriptorProtos"
    optimize_for: SPEED
    go_package: "google.golang.org/protobuf/types/descriptorpb"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.Reflection"
  }
  source_code_info {
    location {
      span: 39
      span: 0
      span: 920
      span: 1
    }
    location {
      path: 12
      span: 39
      span: 0
      span: 18
      leading_detached_comments: " Protocol Buffers - Google\'s data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      leading_detached_comments: " Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n"
    }
    location {
      path: 2
      span: 41
      span: 0
      span: 24
    }
    location {
      path: 8
      span: 43
      span: 0
      span: 68
    }
    location {
      path: 8
      path: 11
      span: 43
      span: 0
      span: 68
    }
    location {
      path: 8
      span: 44
      span: 0
      span: 44
    }
    location {
      path: 8
      path: 1
      span: 44
      span: 0
      span: 44
    }
    location {
      path: 8
      span: 45
      span: 0
      span: 49
    }
    location {
      path: 8
      path: 8
      span: 45
      span: 0
      span: 49
    }
    location {
      path: 8
      span: 46
      span: 0
      span: 55
    }
    location {
      path: 8
      path: 37
      span: 46
      span: 0
      span: 55
    }
    location {
      path: 8
      span: 47
      span: 0
      span: 33
    }
    location {
      path: 8
      path: 36
      span: 47
      span: 0
      span: 33
    }
    location {
      path: 8
      span: 48
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 48
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 52
      span: 0
      span: 28
    }
    location {
      path: 8
      path: 9
      span: 52
      span: 0
      span: 28
      leading_comments: " descriptor.proto must be optimized for speed because reflection-based\n algorithms don\'t work during bootstrapping.\n"
    }
    location {
      path: 4
      path: 0
      span: 56
      span: 0
      span: 58
      span: 1
      leading_comments: " The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 56
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 57
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 4
      span: 57
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 6
      span: 57
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 57
      span: 31
      span: 35
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 57
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 1
      span: 61
      span: 0
      span: 90
      span: 1
      leading_comments: " Describes a complete .proto file.\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 61
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 62
      span: 2
      span: 27
      trailing_comments: " file name, relative to root of source tree\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 4
      span: 62
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 62
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 62
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 62
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 63
      span: 2
      span: 30
      trailing_comments: " e.g. \"foo\", \"foo.bar\", etc.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 4
      span: 63
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 5
      span: 63
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 63
      span: 18
      span: 25
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 63
      span: 28
      span: 29
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 66
      span: 2
      span: 33
      leading_comments: " Names of files imported by this file.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 4
      span: 66
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 5
      span: 66
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 66
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 66
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      span: 68
      span: 2
      span: 40
      leading_comments: " Indexes of the public imported files in the dependency list above.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 4
      span: 68
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 5
      span: 68
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 1
      span: 68
      span: 17
      span: 34
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 3
      span: 68
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      span: 71
      span: 2
      span: 38
      leading_comments: " Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 4
      span: 71
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 5
      span: 71
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 1
      span: 71
      span: 17
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 3
      span: 71
      span: 35
      span: 37
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      span: 74
      span: 2
      span: 44
      leading_comments: " All top-level definitions in this file.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 4
      span: 74
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 6
      span: 74
      span: 11
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 1
      span: 74
      span: 27
      span: 39
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 3
      span: 74
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      span: 75
      span: 2
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 4
      span: 75
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 6
      span: 75
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 1
      span: 75
      span: 31
      span: 40
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 3
      span: 75
      span: 43
      span: 44
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      span: 76
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 4
      span: 76
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 6
      span: 76
      span: 11
      span: 33
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 1
      span: 76
      span: 34
      span: 41
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 3
      span: 76
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      span: 77
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 4
      span: 77
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 6
      span: 77
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 1
      span: 77
      span: 32
      span: 41
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 3
      span: 77
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      span: 79
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 4
      span: 79
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 6
      span: 79
      span: 11
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 1
      span: 79
      span: 23
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 3
      span: 79
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      span: 85
      span: 2
      span: 47
      leading_comments: " This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 4
      span: 85
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 6
      span: 85
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 1
      span: 85
      span: 26
      span: 42
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 3
      span: 85
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      span: 89
      span: 2
      span: 30
      leading_comments: " The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 4
      span: 89
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 5
      span: 89
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 1
      span: 89
      span: 18
      span: 24
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 3
      span: 89
      span: 27
      span: 29
    }
    location {
      path: 4
      path: 2
      span: 93
      span: 0
      span: 125
      span: 1
      leading_comments: " Describes a message type.\n"
    }
    location {
      path: 4
      path: 2
      path: 1
      span: 93
      span: 8
      span: 23
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      span: 94
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 4
      span: 94
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 5
      span: 94
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 1
      span: 94
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 3
      span: 94
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      span: 96
      span: 2
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 4
      span: 96
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 6
      span: 96
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 1
      span: 96
      span: 32
      span: 37
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 3
      span: 96
      span: 40
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      span: 97
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 4
      span: 97
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 6
      span: 97
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 1
      span: 97
      span: 32
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 3
      span: 97
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      span: 99
      span: 2
      span: 43
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 4
      span: 99
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 6
      span: 99
      span: 11
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 1
      span: 99
      span: 27
      span: 38
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 3
      span: 99
      span: 41
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      span: 100
      span: 2
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 4
      span: 100
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 6
      span: 100
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 1
      span: 100
      span: 31
      span: 40
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 3
      span: 100
      span: 43
      span: 44
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      span: 102
      span: 2
      span: 107
      span: 3
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 1
      span: 102
      span: 10
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      span: 103
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 103
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 103
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 103
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 103
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      span: 104
      span: 4
      span: 27
      trailing_comments: " Exclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 104
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 104
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 104
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 104
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      span: 106
      span: 4
      span: 47
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 106
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 6
      span: 106
      span: 13
      span: 34
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 106
      span: 35
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 106
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      span: 108
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 4
      span: 108
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 6
      span: 108
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 1
      span: 108
      span: 26
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 3
      span: 108
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      span: 110
      span: 2
      span: 47
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 4
      span: 110
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 6
      span: 110
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 1
      span: 110
      span: 32
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 3
      span: 110
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      span: 112
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 4
      span: 112
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 6
      span: 112
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 1
      span: 112
      span: 26
      span: 33
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 3
      span: 112
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      span: 117
      span: 2
      span: 120
      span: 3
      leading_comments: " Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 1
      span: 117
      span: 10
      span: 23
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      span: 118
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 4
      span: 118
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 5
      span: 118
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 1
      span: 118
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 3
      span: 118
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      span: 119
      span: 4
      span: 27
      trailing_comments: " Exclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 4
      span: 119
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 5
      span: 119
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 1
      span: 119
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 3
      span: 119
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      span: 121
      span: 2
      span: 44
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 4
      span: 121
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 6
      span: 121
      span: 11
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 1
      span: 121
      span: 25
      span: 39
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 3
      span: 121
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      span: 124
      span: 2
      span: 37
      leading_comments: " Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 4
      span: 124
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 5
      span: 124
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 1
      span: 124
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 3
      span: 124
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 3
      span: 127
      span: 0
      span: 134
      span: 1
    }
    location {
      path: 4
      path: 3
      path: 1
      span: 127
      span: 8
      span: 29
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      span: 129
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 4
      span: 129
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 6
      span: 129
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 1
      span: 129
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 3
      span: 129
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 3
      path: 5
      span: 133
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      span: 133
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      path: 1
      span: 133
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      path: 2
      span: 133
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 4
      span: 137
      span: 0
      span: 237
      span: 1
      leading_comments: " Describes a field within a message.\n"
    }
    location {
      path: 4
      path: 4
      path: 1
      span: 137
      span: 8
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      span: 138
      span: 2
      span: 169
      span: 3
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 1
      span: 138
      span: 7
      span: 11
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      span: 141
      span: 4
      span: 20
      leading_comments: " 0 is reserved for errors.\n Order is weird for historical reasons.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 141
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 141
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      span: 142
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 142
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 142
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      span: 145
      span: 4
      span: 19
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 145
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 145
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      span: 146
      span: 4
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      path: 1
      span: 146
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      path: 2
      span: 146
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      span: 149
      span: 4
      span: 19
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      path: 1
      span: 149
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      path: 2
      span: 149
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      span: 150
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      path: 1
      span: 150
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      path: 2
      span: 150
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      span: 151
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      path: 1
      span: 151
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      path: 2
      span: 151
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      span: 152
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      path: 1
      span: 152
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      path: 2
      span: 152
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      span: 153
      span: 4
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      path: 1
      span: 153
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      path: 2
      span: 153
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      span: 158
      span: 4
      span: 20
      leading_comments: " Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      path: 1
      span: 158
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      path: 2
      span: 158
      span: 17
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      span: 159
      span: 4
      span: 22
      trailing_comments: " Length-delimited aggregate.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      path: 1
      span: 159
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      path: 2
      span: 159
      span: 19
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      span: 162
      span: 4
      span: 20
      leading_comments: " New in version 2.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      path: 1
      span: 162
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      path: 2
      span: 162
      span: 17
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      span: 163
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      path: 1
      span: 163
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      path: 2
      span: 163
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      span: 164
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      path: 1
      span: 164
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      path: 2
      span: 164
      span: 16
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      span: 165
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      path: 1
      span: 165
      span: 4
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      path: 2
      span: 165
      span: 20
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      span: 166
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      path: 1
      span: 166
      span: 4
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      path: 2
      span: 166
      span: 20
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      span: 167
      span: 4
      span: 21
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      path: 1
      span: 167
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      path: 2
      span: 167
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      span: 168
      span: 4
      span: 21
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      path: 1
      span: 168
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      path: 2
      span: 168
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      span: 171
      span: 2
      span: 176
      span: 3
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 1
      span: 171
      span: 7
      span: 12
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      span: 173
      span: 4
      span: 23
      leading_comments: " 0 is reserved for errors\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 173
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      path: 2
      span: 173
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      span: 174
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 174
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      path: 2
      span: 174
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      span: 175
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 175
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      path: 2
      span: 175
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      span: 178
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 4
      span: 178
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 5
      span: 178
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 1
      span: 178
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 3
      span: 178
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      span: 179
      span: 2
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 4
      span: 179
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 5
      span: 179
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 1
      span: 179
      span: 17
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 3
      span: 179
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      span: 180
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 4
      span: 180
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 6
      span: 180
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 1
      span: 180
      span: 17
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 3
      span: 180
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      span: 184
      span: 2
      span: 25
      leading_comments: " If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 4
      span: 184
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 6
      span: 184
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 1
      span: 184
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 3
      span: 184
      span: 23
      span: 24
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      span: 191
      span: 2
      span: 32
      leading_comments: " For message and enum types, this is the name of the type.  If the name\n starts with a \'.\', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 4
      span: 191
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 5
      span: 191
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 1
      span: 191
      span: 18
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 3
      span: 191
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      span: 195
      span: 2
      span: 31
      leading_comments: " For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 4
      span: 195
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 5
      span: 195
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 1
      span: 195
      span: 18
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 3
      span: 195
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      span: 201
      span: 2
      span: 36
      leading_comments: " For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 4
      span: 201
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 5
      span: 201
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 1
      span: 201
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 3
      span: 201
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      span: 205
      span: 2
      span: 33
      leading_comments: " If set, gives the index of a oneof in the containing type\'s oneof_decl\n list.  This field is a member of that oneof.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 4
      span: 205
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 5
      span: 205
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 1
      span: 205
      span: 17
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 3
      span: 205
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      span: 211
      span: 2
      span: 33
      leading_comments: " JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option\'s value\n will be used. Otherwise, it\'s deduced from the field\'s name by converting\n it to camelCase.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 4
      span: 211
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 5
      span: 211
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 1
      span: 211
      span: 18
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 3
      span: 211
      span: 30
      span: 32
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      span: 213
      span: 2
      span: 36
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 4
      span: 213
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 6
      span: 213
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 1
      span: 213
      span: 24
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 3
      span: 213
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 10
      span: 236
      span: 2
      span: 37
      leading_comments: " If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.\n\n When proto3_optional is true, this field must be belong to a oneof to\n signal to old proto3 clients that presence is tracked for this field. This\n oneof is known as a \"synthetic\" oneof, and this field must be its sole\n member (each proto3 optional field gets its own synthetic oneof). Synthetic\n oneofs exist in the descriptor only, and do not generate any API. Synthetic\n oneofs must be ordered after all \"real\" oneofs.\n\n For message fields, proto3_optional doesn\'t create any semantic change,\n since non-repeated message fields always track presence. However it still\n indicates the semantic detail of whether the user wrote \"optional\" or not.\n This can be useful for round-tripping the .proto file. For consistency we\n give message fields a synthetic oneof also, even though it is not required\n to track presence. This is especially important because the parser can\'t\n tell if a field is a message or an enum, so it must always create a\n synthetic oneof.\n\n Proto2 optional fields do not set this flag, because they already indicate\n optional with `LABEL_OPTIONAL`.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 10
      path: 4
      span: 236
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 10
      path: 5
      span: 236
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 10
      path: 1
      span: 236
      span: 16
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 10
      path: 3
      span: 236
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 5
      span: 240
      span: 0
      span: 243
      span: 1
      leading_comments: " Describes a oneof.\n"
    }
    location {
      path: 4
      path: 5
      path: 1
      span: 240
      span: 8
      span: 28
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      span: 241
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 4
      span: 241
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 5
      span: 241
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 1
      span: 241
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 3
      span: 241
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      span: 242
      span: 2
      span: 36
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 4
      span: 242
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 6
      span: 242
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 1
      span: 242
      span: 24
      span: 31
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 3
      span: 242
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 6
      span: 246
      span: 0
      span: 272
      span: 1
      leading_comments: " Describes an enum type.\n"
    }
    location {
      path: 4
      path: 6
      path: 1
      span: 246
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      span: 247
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 4
      span: 247
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 5
      span: 247
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 1
      span: 247
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 3
      span: 247
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      span: 249
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 4
      span: 249
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 6
      span: 249
      span: 11
      span: 35
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 1
      span: 249
      span: 36
      span: 41
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 3
      span: 249
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      span: 251
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 4
      span: 251
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 6
      span: 251
      span: 11
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 1
      span: 251
      span: 23
      span: 30
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 3
      span: 251
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      span: 259
      span: 2
      span: 262
      span: 3
      leading_comments: " Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.\n\n Note that this is distinct from DescriptorProto.ReservedRange in that it\n is inclusive such that it can appropriately represent the entire int32\n domain.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 1
      span: 259
      span: 10
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      span: 260
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 260
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 260
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 260
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 260
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      span: 261
      span: 4
      span: 27
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 261
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 261
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 261
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 261
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      span: 267
      span: 2
      span: 48
      leading_comments: " Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n"
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 4
      span: 267
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 6
      span: 267
      span: 11
      span: 28
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 1
      span: 267
      span: 29
      span: 43
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 3
      span: 267
      span: 46
      span: 47
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      span: 271
      span: 2
      span: 36
      leading_comments: " Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n"
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 4
      span: 271
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 5
      span: 271
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 1
      span: 271
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 3
      span: 271
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 7
      span: 275
      span: 0
      span: 280
      span: 1
      leading_comments: " Describes a value within an enum.\n"
    }
    location {
      path: 4
      path: 7
      path: 1
      span: 275
      span: 8
      span: 32
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      span: 276
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 4
      span: 276
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 5
      span: 276
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 1
      span: 276
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 3
      span: 276
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      span: 277
      span: 2
      span: 28
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 4
      span: 277
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 5
      span: 277
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 1
      span: 277
      span: 17
      span: 23
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 3
      span: 277
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      span: 279
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 4
      span: 279
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 6
      span: 279
      span: 11
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 1
      span: 279
      span: 28
      span: 35
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 3
      span: 279
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 8
      span: 283
      span: 0
      span: 288
      span: 1
      leading_comments: " Describes a service.\n"
    }
    location {
      path: 4
      path: 8
      path: 1
      span: 283
      span: 8
      span: 30
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      span: 284
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 4
      span: 284
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 5
      span: 284
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 1
      span: 284
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 3
      span: 284
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      span: 285
      span: 2
      span: 44
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 4
      span: 285
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 6
      span: 285
      span: 11
      span: 32
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 1
      span: 285
      span: 33
      span: 39
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 3
      span: 285
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      span: 287
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 4
      span: 287
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 6
      span: 287
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 1
      span: 287
      span: 26
      span: 33
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 3
      span: 287
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 9
      span: 291
      span: 0
      span: 305
      span: 1
      leading_comments: " Describes a method of a service.\n"
    }
    location {
      path: 4
      path: 9
      path: 1
      span: 291
      span: 8
      span: 29
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      span: 292
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 4
      span: 292
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 5
      span: 292
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 1
      span: 292
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 3
      span: 292
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      span: 296
      span: 2
      span: 33
      leading_comments: " Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 4
      span: 296
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 5
      span: 296
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 1
      span: 296
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 3
      span: 296
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      span: 297
      span: 2
      span: 34
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 4
      span: 297
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 5
      span: 297
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 1
      span: 297
      span: 18
      span: 29
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 3
      span: 297
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      span: 299
      span: 2
      span: 37
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 4
      span: 299
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 6
      span: 299
      span: 11
      span: 24
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 1
      span: 299
      span: 25
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 3
      span: 299
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      span: 302
      span: 2
      span: 55
      leading_comments: " Identifies if client streams multiple client messages\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 4
      span: 302
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 5
      span: 302
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 1
      span: 302
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 3
      span: 302
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 8
      span: 302
      span: 37
      span: 54
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 7
      span: 302
      span: 48
      span: 53
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      span: 304
      span: 2
      span: 55
      leading_comments: " Identifies if server streams multiple server messages\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 4
      span: 304
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 5
      span: 304
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 1
      span: 304
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 3
      span: 304
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 8
      span: 304
      span: 37
      span: 54
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 7
      span: 304
      span: 48
      span: 53
    }
    location {
      path: 4
      path: 10
      span: 340
      span: 0
      span: 463
      span: 1
      leading_detached_comments: " ===================================================================\n Options\n"
      leading_detached_comments: " Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there\'s no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n"
    }
    location {
      path: 4
      path: 10
      path: 1
      span: 340
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      span: 346
      span: 2
      span: 35
      leading_comments: " Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 4
      span: 346
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 5
      span: 346
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 1
      span: 346
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 3
      span: 346
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      span: 354
      span: 2
      span: 43
      leading_comments: " Controls the name of the wrapper Java class generated for the .proto file.\n That class will always contain the .proto file\'s getDescriptor() method as\n well as any top-level extensions defined in the .proto file.\n If java_multiple_files is disabled, then all the other classes from the\n .proto file will be nested inside the single wrapper outer class.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 4
      span: 354
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 5
      span: 354
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 1
      span: 354
      span: 18
      span: 38
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 3
      span: 354
      span: 41
      span: 42
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      span: 362
      span: 2
      span: 59
      leading_comments: " If enabled, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the wrapper class\n named by java_outer_classname.  However, the wrapper class will still be\n generated to contain the file\'s getDescriptor() method as well as any\n top-level extensions defined in the file.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 4
      span: 362
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 5
      span: 362
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 1
      span: 362
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 3
      span: 362
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 8
      span: 362
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 7
      span: 362
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      span: 365
      span: 2
      span: 69
      leading_comments: " This option does nothing.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 4
      span: 365
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 5
      span: 365
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 1
      span: 365
      span: 16
      span: 45
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 3
      span: 365
      span: 48
      span: 50
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 8
      span: 365
      span: 51
      span: 68
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 8
      path: 3
      span: 365
      span: 52
      span: 67
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      span: 373
      span: 2
      span: 62
      leading_comments: " If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 4
      span: 373
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 5
      span: 373
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 1
      span: 373
      span: 16
      span: 38
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 3
      span: 373
      span: 41
      span: 43
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 8
      span: 373
      span: 44
      span: 61
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 7
      span: 373
      span: 55
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      span: 377
      span: 2
      span: 382
      span: 3
      leading_comments: " Generated classes can be optimized for speed or code size.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 1
      span: 377
      span: 7
      span: 19
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      span: 378
      span: 4
      span: 14
      trailing_comments: " Generate complete code for parsing, serialization,\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 378
      span: 4
      span: 9
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 378
      span: 12
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      span: 380
      span: 4
      span: 18
      leading_comments: " etc.\n"
      trailing_comments: " Use ReflectionOps to implement these methods.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 380
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 380
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      span: 381
      span: 4
      span: 21
      trailing_comments: " Generate code using MessageLite and the lite runtime.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 381
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 381
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      span: 383
      span: 2
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 4
      span: 383
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 6
      span: 383
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 1
      span: 383
      span: 24
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 3
      span: 383
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 8
      span: 383
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 7
      span: 383
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      span: 390
      span: 2
      span: 34
      leading_comments: " Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 4
      span: 390
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 5
      span: 390
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 1
      span: 390
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 3
      span: 390
      span: 31
      span: 33
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      span: 405
      span: 2
      span: 59
      leading_comments: " Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 4
      span: 405
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 5
      span: 405
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 1
      span: 405
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 3
      span: 405
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 8
      span: 405
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 7
      span: 405
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      span: 406
      span: 2
      span: 61
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 4
      span: 406
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 5
      span: 406
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 1
      span: 406
      span: 16
      span: 37
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 3
      span: 406
      span: 40
      span: 42
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 8
      span: 406
      span: 43
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 7
      span: 406
      span: 54
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      span: 407
      span: 2
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 4
      span: 407
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 5
      span: 407
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 1
      span: 407
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 3
      span: 407
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 8
      span: 407
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 7
      span: 407
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      span: 408
      span: 2
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 4
      span: 408
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 5
      span: 408
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 1
      span: 408
      span: 16
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 3
      span: 408
      span: 39
      span: 41
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 8
      span: 408
      span: 42
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 7
      span: 408
      span: 53
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      span: 414
      span: 2
      span: 50
      leading_comments: " Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 4
      span: 414
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 5
      span: 414
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 1
      span: 414
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 3
      span: 414
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 8
      span: 414
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 7
      span: 414
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      span: 418
      span: 2
      span: 55
      leading_comments: " Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 4
      span: 418
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 5
      span: 418
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 1
      span: 418
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 3
      span: 418
      span: 35
      span: 37
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 8
      span: 418
      span: 38
      span: 54
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 7
      span: 418
      span: 49
      span: 53
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      span: 423
      span: 2
      span: 41
      leading_comments: " Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 4
      span: 423
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 5
      span: 423
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 1
      span: 423
      span: 18
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 3
      span: 423
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      span: 426
      span: 2
      span: 40
      leading_comments: " Namespace for generated classes; defaults to the package.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 4
      span: 426
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 5
      span: 426
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 1
      span: 426
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 3
      span: 426
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      span: 432
      span: 2
      span: 36
      leading_comments: " By default Swift generators will take the proto package and CamelCase it\n replacing \'.\' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 4
      span: 432
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 5
      span: 432
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 1
      span: 432
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 3
      span: 432
      span: 33
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      span: 436
      span: 2
      span: 40
      leading_comments: " Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 4
      span: 436
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 5
      span: 436
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 1
      span: 436
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 3
      span: 436
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      span: 441
      span: 2
      span: 37
      leading_comments: " Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 4
      span: 441
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 5
      span: 441
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 1
      span: 441
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 3
      span: 441
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      span: 446
      span: 2
      span: 46
      leading_comments: " Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 4
      span: 446
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 5
      span: 446
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 1
      span: 446
      span: 18
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 3
      span: 446
      span: 43
      span: 45
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      span: 451
      span: 2
      span: 36
      leading_comments: " Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 4
      span: 451
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 5
      span: 451
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 1
      span: 451
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 3
      span: 451
      span: 33
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      span: 456
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here.\n See the documentation for the \"Options\" section above.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 4
      span: 456
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 6
      span: 456
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 1
      span: 456
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 3
      span: 456
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 5
      span: 460
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message.\n See the documentation for the \"Options\" section above.\n"
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      span: 460
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      path: 1
      span: 460
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      path: 2
      span: 460
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 10
      path: 9
      span: 462
      span: 2
      span: 14
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      span: 462
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      path: 1
      span: 462
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      path: 2
      span: 462
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 11
      span: 465
      span: 0
      span: 531
      span: 1
    }
    location {
      path: 4
      path: 11
      path: 1
      span: 465
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      span: 484
      span: 2
      span: 62
      leading_comments: " Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It\'s less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 4
      span: 484
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 5
      span: 484
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 1
      span: 484
      span: 16
      span: 39
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 3
      span: 484
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 8
      span: 484
      span: 44
      span: 61
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 7
      span: 484
      span: 55
      span: 60
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      span: 489
      span: 2
      span: 70
      leading_comments: " Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 4
      span: 489
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 5
      span: 489
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 1
      span: 489
      span: 16
      span: 47
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 3
      span: 489
      span: 50
      span: 51
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 8
      span: 489
      span: 52
      span: 69
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 7
      span: 489
      span: 63
      span: 68
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      span: 495
      span: 2
      span: 49
      leading_comments: " Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 4
      span: 495
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 5
      span: 495
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 1
      span: 495
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 3
      span: 495
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 8
      span: 495
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 7
      span: 495
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 11
      path: 9
      span: 497
      span: 2
      span: 19
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      path: 1
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      path: 2
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      span: 497
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      path: 1
      span: 497
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      path: 2
      span: 497
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 2
      span: 497
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 2
      path: 1
      span: 497
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 2
      path: 2
      span: 497
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      span: 520
      span: 2
      span: 30
      leading_comments: " Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementations still need to work as\n if the field is a repeated message field.\n\n NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 4
      span: 520
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 5
      span: 520
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 1
      span: 520
      span: 16
      span: 25
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 3
      span: 520
      span: 28
      span: 29
    }
    location {
      path: 4
      path: 11
      path: 9
      span: 522
      span: 2
      span: 13
      trailing_comments: " javalite_serializable\n"
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 3
      span: 522
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 3
      path: 1
      span: 522
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 3
      path: 2
      span: 522
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      span: 523
      span: 2
      span: 13
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 4
      span: 523
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 4
      path: 1
      span: 523
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 4
      path: 2
      span: 523
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      span: 527
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 4
      span: 527
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 6
      span: 527
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 1
      span: 527
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 3
      span: 527
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 11
      path: 5
      span: 530
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      span: 530
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      path: 1
      span: 530
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      path: 2
      span: 530
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 12
      span: 533
      span: 0
      span: 635
      span: 1
    }
    location {
      path: 4
      path: 12
      path: 1
      span: 533
      span: 8
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      span: 538
      span: 2
      span: 46
      leading_comments: " The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we\'ll try to include it in a future version!\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 4
      span: 538
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 6
      span: 538
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 1
      span: 538
      span: 17
      span: 22
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 3
      span: 538
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 8
      span: 538
      span: 27
      span: 45
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 7
      span: 538
      span: 38
      span: 44
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      span: 539
      span: 2
      span: 546
      span: 3
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 1
      span: 539
      span: 7
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      span: 541
      span: 4
      span: 15
      leading_comments: " Default mode.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 541
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 541
      span: 13
      span: 14
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      span: 543
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 543
      span: 4
      span: 8
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 543
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      span: 545
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 545
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 545
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      span: 552
      span: 2
      span: 27
      leading_comments: " The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 4
      span: 552
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 5
      span: 552
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 1
      span: 552
      span: 16
      span: 22
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 3
      span: 552
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      span: 565
      span: 2
      span: 51
      leading_comments: " The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 4
      span: 565
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 6
      span: 565
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 1
      span: 565
      span: 18
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 3
      span: 565
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 8
      span: 565
      span: 29
      span: 50
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 7
      span: 565
      span: 40
      span: 49
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      span: 566
      span: 2
      span: 575
      span: 3
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 1
      span: 566
      span: 7
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      span: 568
      span: 4
      span: 18
      leading_comments: " Use the default type.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 568
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      path: 2
      span: 568
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      span: 571
      span: 4
      span: 18
      leading_comments: " Use JavaScript strings.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 571
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      path: 2
      span: 571
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      span: 574
      span: 4
      span: 18
      leading_comments: " Use JavaScript numbers.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 574
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      path: 2
      span: 574
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      span: 611
      span: 2
      span: 43
      leading_comments: " Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message\'s contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n\n As of 2021, lazy does no correctness checks on the byte stream during\n parsing.  This may lead to crashes if and when an invalid byte stream is\n finally parsed upon access.\n\n TODO(b/211906113):  Enable validation on lazy fields.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 4
      span: 611
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 5
      span: 611
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 1
      span: 611
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 3
      span: 611
      span: 23
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 8
      span: 611
      span: 25
      span: 42
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 7
      span: 611
      span: 36
      span: 41
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      span: 616
      span: 2
      span: 55
      leading_comments: " unverified_lazy does no correctness checks on the byte stream. This should\n only be used where lazy with verification is prohibitive for performance\n reasons.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 4
      span: 616
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 5
      span: 616
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 1
      span: 616
      span: 16
      span: 31
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 3
      span: 616
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 8
      span: 616
      span: 37
      span: 54
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 7
      span: 616
      span: 48
      span: 53
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      span: 622
      span: 2
      span: 49
      leading_comments: " Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 4
      span: 622
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 5
      span: 622
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 1
      span: 622
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 3
      span: 622
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 8
      span: 622
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 7
      span: 622
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      span: 625
      span: 2
      span: 44
      leading_comments: " For Google-internal migration only. Do not use.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 4
      span: 625
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 5
      span: 625
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 1
      span: 625
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 3
      span: 625
      span: 23
      span: 25
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 8
      span: 625
      span: 26
      span: 43
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 7
      span: 625
      span: 37
      span: 42
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 7
      span: 629
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 7
      path: 4
      span: 629
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 7
      path: 6
      span: 629
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 7
      path: 1
      span: 629
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 7
      path: 3
      span: 629
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 12
      path: 5
      span: 632
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      span: 632
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      path: 1
      span: 632
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      path: 2
      span: 632
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 9
      span: 634
      span: 2
      span: 13
      trailing_comments: " removed jtype\n"
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      span: 634
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      path: 1
      span: 634
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      path: 2
      span: 634
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 13
      span: 637
      span: 0
      span: 643
      span: 1
    }
    location {
      path: 4
      path: 13
      path: 1
      span: 637
      span: 8
      span: 20
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      span: 639
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 4
      span: 639
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 6
      span: 639
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 1
      span: 639
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 3
      span: 639
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 13
      path: 5
      span: 642
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      span: 642
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      path: 1
      span: 642
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      path: 2
      span: 642
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 14
      span: 645
      span: 0
      span: 664
      span: 1
    }
    location {
      path: 4
      path: 14
      path: 1
      span: 645
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      span: 649
      span: 2
      span: 32
      leading_comments: " Set this option to true to allow mapping different tag names to the same\n value.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 4
      span: 649
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 5
      span: 649
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 1
      span: 649
      span: 16
      span: 27
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 3
      span: 649
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      span: 655
      span: 2
      span: 49
      leading_comments: " Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 4
      span: 655
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 5
      span: 655
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 1
      span: 655
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 3
      span: 655
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 8
      span: 655
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 7
      span: 655
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 14
      path: 9
      span: 657
      span: 2
      span: 13
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      span: 657
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      path: 1
      span: 657
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      path: 2
      span: 657
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      span: 660
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 4
      span: 660
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 6
      span: 660
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 1
      span: 660
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 3
      span: 660
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 14
      path: 5
      span: 663
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      span: 663
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      path: 1
      span: 663
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      path: 2
      span: 663
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 15
      span: 666
      span: 0
      span: 678
      span: 1
    }
    location {
      path: 4
      path: 15
      path: 1
      span: 666
      span: 8
      span: 24
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      span: 671
      span: 2
      span: 49
      leading_comments: " Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n"
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 4
      span: 671
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 5
      span: 671
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 1
      span: 671
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 3
      span: 671
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 8
      span: 671
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 7
      span: 671
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      span: 674
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 4
      span: 674
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 6
      span: 674
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 1
      span: 674
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 3
      span: 674
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 15
      path: 5
      span: 677
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      span: 677
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      path: 1
      span: 677
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      path: 2
      span: 677
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 16
      span: 680
      span: 0
      span: 698
      span: 1
    }
    location {
      path: 4
      path: 16
      path: 1
      span: 680
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      span: 691
      span: 2
      span: 50
      leading_comments: " Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google\'s internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 4
      span: 691
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 5
      span: 691
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 1
      span: 691
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 3
      span: 691
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 8
      span: 691
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 7
      span: 691
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      span: 694
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 4
      span: 694
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 6
      span: 694
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 1
      span: 694
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 3
      span: 694
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 16
      path: 5
      span: 697
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      span: 697
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      path: 1
      span: 697
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      path: 2
      span: 697
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 17
      span: 700
      span: 0
      span: 729
      span: 1
    }
    location {
      path: 4
      path: 17
      path: 1
      span: 700
      span: 8
      span: 21
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      span: 711
      span: 2
      span: 50
      leading_comments: " Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google\'s internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 4
      span: 711
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 5
      span: 711
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 1
      span: 711
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 3
      span: 711
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 8
      span: 711
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 7
      span: 711
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      span: 716
      span: 2
      span: 720
      span: 3
      leading_comments: " Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 1
      span: 716
      span: 7
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      span: 717
      span: 4
      span: 28
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 717
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 717
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      span: 718
      span: 4
      span: 24
      trailing_comments: " implies idempotent\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 718
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 718
      span: 22
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      span: 719
      span: 4
      span: 19
      trailing_comments: " idempotent, but may have side effects\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 719
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 719
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      span: 721
      span: 2
      span: 722
      span: 38
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 4
      span: 721
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 6
      span: 721
      span: 11
      span: 27
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 1
      span: 721
      span: 28
      span: 45
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 3
      span: 721
      span: 48
      span: 50
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 8
      span: 722
      span: 6
      span: 37
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 7
      span: 722
      span: 17
      span: 36
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      span: 725
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 4
      span: 725
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 6
      span: 725
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 1
      span: 725
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 3
      span: 725
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 17
      path: 5
      span: 728
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      span: 728
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      path: 1
      span: 728
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      path: 2
      span: 728
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 18
      span: 738
      span: 0
      span: 758
      span: 1
      leading_comments: " A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n"
    }
    location {
      path: 4
      path: 18
      path: 1
      span: 738
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      span: 744
      span: 2
      span: 747
      span: 3
      leading_comments: " The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n \"foo.(bar.baz).moo\".\n"
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 1
      span: 744
      span: 10
      span: 18
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      span: 745
      span: 4
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 745
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 745
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 745
      span: 20
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 745
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      span: 746
      span: 4
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 746
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 746
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 746
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 746
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      span: 748
      span: 2
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 4
      span: 748
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 6
      span: 748
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 1
      span: 748
      span: 20
      span: 24
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 3
      span: 748
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      span: 752
      span: 2
      span: 39
      leading_comments: " The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n"
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 4
      span: 752
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 5
      span: 752
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 1
      span: 752
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 3
      span: 752
      span: 37
      span: 38
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      span: 753
      span: 2
      span: 41
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 4
      span: 753
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 5
      span: 753
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 1
      span: 753
      span: 18
      span: 36
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 3
      span: 753
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      span: 754
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 4
      span: 754
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 5
      span: 754
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 1
      span: 754
      span: 17
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 3
      span: 754
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      span: 755
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 4
      span: 755
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 5
      span: 755
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 1
      span: 755
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 3
      span: 755
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      span: 756
      span: 2
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 4
      span: 756
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 5
      span: 756
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 1
      span: 756
      span: 17
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 3
      span: 756
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      span: 757
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 4
      span: 757
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 5
      span: 757
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 1
      span: 757
      span: 18
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 3
      span: 757
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 19
      span: 765
      span: 0
      span: 894
      span: 1
      leading_comments: " Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n"
      leading_detached_comments: " ===================================================================\n Optional source code info\n"
    }
    location {
      path: 4
      path: 19
      path: 1
      span: 765
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      span: 809
      span: 2
      span: 33
      leading_comments: " A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let\'s look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location\'s span is not always a subset of its parent\'s span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location\'s span is a subset of some other location\'s span\n   does not mean that it is a descendant.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn\'t understand, as more types of locations could\n   be recorded in the future.\n"
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 4
      span: 809
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 6
      span: 809
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 1
      span: 809
      span: 20
      span: 28
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 3
      span: 809
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      span: 810
      span: 2
      span: 893
      span: 3
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 1
      span: 810
      span: 10
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      span: 834
      span: 4
      span: 44
      leading_comments: " Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition occurs.\n For example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 834
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 834
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 834
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 834
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      span: 834
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      path: 2
      span: 834
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      span: 841
      span: 4
      span: 44
      leading_comments: " Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 841
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 841
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 841
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 841
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 8
      span: 841
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 8
      path: 2
      span: 841
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      span: 890
      span: 4
      span: 41
      leading_comments: " If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to moo.\n   //\n   // Another line attached to moo.\n   optional double moo = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to moo or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 890
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 5
      span: 890
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 890
      span: 20
      span: 36
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 890
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      span: 891
      span: 4
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 4
      span: 891
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 5
      span: 891
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 1
      span: 891
      span: 20
      span: 37
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 3
      span: 891
      span: 40
      span: 41
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      span: 892
      span: 4
      span: 50
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 4
      span: 892
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 5
      span: 892
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 1
      span: 892
      span: 20
      span: 45
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 3
      span: 892
      span: 48
      span: 49
    }
    location {
      path: 4
      path: 20
      span: 899
      span: 0
      span: 920
      span: 1
      leading_comments: " Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n"
    }
    location {
      path: 4
      path: 20
      path: 1
      span: 899
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      span: 902
      span: 2
      span: 37
      leading_comments: " An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n"
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 4
      span: 902
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 6
      span: 902
      span: 11
      span: 21
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 1
      span: 902
      span: 22
      span: 32
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 3
      span: 902
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      span: 903
      span: 2
      span: 919
      span: 3
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 1
      span: 903
      span: 10
      span: 20
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      span: 906
      span: 4
      span: 44
      leading_comments: " Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 906
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 906
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 906
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 906
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      span: 906
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      path: 2
      span: 906
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      span: 909
      span: 4
      span: 36
      leading_comments: " Identifies the filesystem path to the original source .proto.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 909
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 909
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 909
      span: 20
      span: 31
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 909
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      span: 913
      span: 4
      span: 29
      leading_comments: " Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 913
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 5
      span: 913
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 913
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 913
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      span: 918
      span: 4
      span: 27
      leading_comments: " Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 4
      span: 918
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 5
      span: 918
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 1
      span: 918
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 3
      span: 918
      span: 25
      span: 26
    }
  }
}
file {
  name: "google/api/annotations.proto"
  package: "google.api"
  dependency: "google/api/http.proto"
  dependency: "google/protobuf/descriptor.proto"
  extension {
    name: "http"
    extendee: ".google.protobuf.MethodOptions"
    number: 72295728
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.api.HttpRule"
    json_name: "http"
  }
  options {
    java_package: "com.google.api"
    java_outer_classname: "AnnotationsProto"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations"
    objc_class_prefix: "GAPI"
  }
  source_code_info {
    location {
      span: 14
      span: 0
      span: 30
      span: 1
    }
    location {
      path: 12
      span: 14
      span: 0
      span: 18
      leading_detached_comments: " Copyright (c) 2015, Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: 2
      span: 16
      span: 0
      span: 19
    }
    location {
      path: 3
      path: 0
      span: 18
      span: 0
      span: 31
    }
    location {
      path: 3
      path: 1
      span: 19
      span: 0
      span: 42
    }
    location {
      path: 8
      span: 21
      span: 0
      span: 88
    }
    location {
      path: 8
      path: 11
      span: 21
      span: 0
      span: 88
    }
    location {
      path: 8
      span: 22
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 22
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 23
      span: 0
      span: 49
    }
    location {
      path: 8
      path: 8
      span: 23
      span: 0
      span: 49
    }
    location {
      path: 8
      span: 24
      span: 0
      span: 39
    }
    location {
      path: 8
      path: 1
      span: 24
      span: 0
      span: 39
    }
    location {
      path: 8
      span: 25
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 36
      span: 25
      span: 0
      span: 34
    }
    location {
      path: 7
      span: 27
      span: 0
      span: 30
      span: 1
    }
    location {
      path: 7
      path: 0
      span: 29
      span: 2
      span: 27
      leading_comments: " See `HttpRule`.\n"
    }
    location {
      path: 7
      path: 0
      path: 2
      span: 27
      span: 7
      span: 36
    }
    location {
      path: 7
      path: 0
      path: 6
      span: 29
      span: 2
      span: 10
    }
    location {
      path: 7
      path: 0
      path: 1
      span: 29
      span: 11
      span: 15
    }
    location {
      path: 7
      path: 0
      path: 3
      span: 29
      span: 18
      span: 26
    }
  }
  syntax: "proto3"
}
file {
  name: "api.proto"
  package: "postman.api.v1"
  dependency: "block.proto"
  dependency: "operation.proto"
  dependency: "google/api/annotations.proto"
  dependency: "google/rpc/status.proto"
  message_type {
    name: "GetVersionRequest"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "version"
    }
  }
  message_type {
    name: "GetVersionResponse"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "result"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "result"
    }
    field {
      name: "error"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.rpc.Status"
      oneof_index: 0
      json_name: "error"
    }
    oneof_decl {
      name: "message"
    }
  }
  service {
    name: "Grpc"
    method {
      name: "GetVersion"
      input_type: ".postman.api.v1.GetVersionRequest"
      output_type: ".postman.api.v1.GetVersionResponse"
      options {
        72295728 {
          2: "/v1/version"
        }
      }
    }
    method {
      name: "SendBlocks"
      input_type: ".postman.api.v1.SendBlocksRequest"
      output_type: ".postman.api.v1.SendBlocksResponse"
      options {
      }
      client_streaming: true
      server_streaming: true
    }
    method {
      name: "SendOperations"
      input_type: ".postman.api.v1.SendOperationsRequest"
      output_type: ".postman.api.v1.SendOperationsResponse"
      options {
      }
      client_streaming: true
      server_streaming: true
    }
  }
  options {
    java_package: "com.postman.api.v1"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/postman/api/v1/grpc;grpc"
    cc_enable_arenas: true
    objc_class_prefix: "GRPC"
    csharp_namespace: "Postman.Api.V1"
    php_namespace: "Postman\\Api\\V1"
  }
  source_code_info {
    location {
      span: 0
      span: 0
      span: 50
      span: 1
    }
    location {
      path: 12
      span: 0
      span: 0
      span: 18
    }
    location {
      path: 2
      span: 2
      span: 0
      span: 23
    }
    location {
      path: 3
      path: 0
      span: 4
      span: 0
      span: 21
    }
    location {
      path: 3
      path: 1
      span: 5
      span: 0
      span: 25
    }
    location {
      path: 3
      path: 2
      span: 6
      span: 0
      span: 38
    }
    location {
      path: 3
      path: 3
      span: 7
      span: 0
      span: 33
    }
    location {
      path: 8
      span: 9
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 9
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 37
      span: 10
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 11
      span: 0
      span: 74
    }
    location {
      path: 8
      path: 11
      span: 11
      span: 0
      span: 74
    }
    location {
      path: 8
      span: 12
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 10
      span: 12
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 13
      span: 0
      span: 43
    }
    location {
      path: 8
      path: 1
      span: 13
      span: 0
      span: 43
    }
    location {
      path: 8
      span: 14
      span: 0
      span: 34
    }
    location {
      path: 8
      path: 36
      span: 14
      span: 0
      span: 34
    }
    location {
      path: 8
      span: 15
      span: 0
      span: 42
    }
    location {
      path: 8
      path: 41
      span: 15
      span: 0
      span: 42
    }
    location {
      path: 6
      path: 0
      span: 18
      span: 0
      span: 31
      span: 1
      leading_comments: " Postman gRPC service\n"
    }
    location {
      path: 6
      path: 0
      path: 1
      span: 18
      span: 8
      span: 12
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      span: 21
      span: 2
      span: 23
      span: 3
      leading_comments: " GetVersion\n"
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      path: 1
      span: 21
      span: 6
      span: 16
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      path: 2
      span: 21
      span: 19
      span: 36
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      path: 3
      span: 21
      span: 49
      span: 67
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      path: 4
      span: 22
      span: 4
      span: 54
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 0
      path: 4
      path: 72295728
      span: 22
      span: 4
      span: 54
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      span: 26
      span: 2
      span: 86
      leading_comments: " SendBlocks\n"
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      path: 1
      span: 26
      span: 6
      span: 16
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      path: 5
      span: 26
      span: 19
      span: 25
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      path: 2
      span: 26
      span: 26
      span: 43
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      path: 6
      span: 26
      span: 56
      span: 62
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 1
      path: 3
      span: 26
      span: 63
      span: 81
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      span: 29
      span: 2
      span: 98
      leading_comments: " SendOperations\n"
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      path: 1
      span: 29
      span: 6
      span: 20
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      path: 5
      span: 29
      span: 23
      span: 29
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      path: 2
      span: 29
      span: 30
      span: 51
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      path: 6
      span: 29
      span: 64
      span: 70
    }
    location {
      path: 6
      path: 0
      path: 2
      path: 2
      path: 3
      span: 29
      span: 71
      span: 93
    }
    location {
      path: 4
      path: 0
      span: 34
      span: 0
      span: 39
      span: 1
      leading_comments: " GetVersionRequest holds request from GetVersion\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 34
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 36
      span: 2
      span: 16
      leading_comments: " string value\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 36
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 36
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 36
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 38
      span: 2
      span: 21
      leading_comments: " string field\n"
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 5
      span: 38
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 38
      span: 9
      span: 16
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 38
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 1
      span: 42
      span: 0
      span: 50
      span: 1
      leading_comments: " GetVersionResponse holds response from GetVersion\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 42
      span: 8
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 44
      span: 2
      span: 16
      leading_comments: " string value\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 44
      span: 2
      span: 8
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 44
      span: 9
      span: 11
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 44
      span: 14
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      span: 46
      span: 2
      span: 49
      span: 3
      leading_comments: " object field\n"
    }
    location {
      path: 4
      path: 1
      path: 8
      path: 0
      path: 1
      span: 46
      span: 8
      span: 15
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 47
      span: 4
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 5
      span: 47
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 47
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 47
      span: 20
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 48
      span: 4
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 6
      span: 48
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 48
      span: 22
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 48
      span: 30
      span: 31
    }
  }
  syntax: "proto3"
}
